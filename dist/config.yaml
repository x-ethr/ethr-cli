version: 1
project_name: ethr-cli
release:
  github:
    owner: x-ethr
    name: ethr-cli
  name_template: '{{.Tag}}'
brews:
  - name: ethr-cli
    repository:
      owner: x-ethr
      name: homebrew-taps
      branch: main
    commit_author:
      name: Jacob B. Sanders
      email: segmentational@gmail.com
    commit_msg_template: '[Chore]: Brew Formula Bump ({{ .ProjectName }}), {{ .Tag }}'
    folder: Formula
    dependencies:
      - name: git
      - name: zsh
        type: optional
      - name: fish
        type: optional
      - name: bash
        type: optional
    conflicts:
      - ethr-cli
    description: ETHR Utilities CLI
    homepage: https://github.com/x-ethr/ethr-cli
    license: BSD 3-Clause License
    skip_upload: "false"
    download_strategy: CurlDownloadStrategy
    goarm: "6"
    goamd64: v1
builds:
  - id: ethr-cli
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
      - "386"
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - linux_amd64_v1
      - linux_arm64
      - linux_386
      - windows_amd64_v1
      - windows_arm64
      - windows_386
      - darwin_amd64_v1
      - darwin_arm64
    dir: .
    main: .
    binary: ethr-cli
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser
    env:
      - CGO_ENABLED=0
archives:
  - id: default
    name_template: '{{ .ProjectName }}- {{- .Os }}- {{- if eq .Arch "amd64" }}x86-64 {{- else if eq .Arch "386" }}i386 {{- else }}{{ .Arch }}{{ end }} {{- if .Arm }}v{{ .Arm }}{{ end }}'
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - src: license*
      - src: LICENSE*
      - src: readme*
      - src: README*
      - src: changelog*
      - src: CHANGELOG*
snapshot:
  name_template: '{{ .Version }}-SNAPSHOT-{{ .ShortCommit }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  algorithm: sha256
changelog:
  sort: asc
  use: github
  groups:
    - title: Features
      regexp: ^.*?(f|F)eature(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$
    - title: Enhancements
      regexp: ^.*?(e|E)nhancement(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$
      order: 1
    - title: Bug Fixes
      regexp: ^.*?(b|B)ug(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$
      order: 2
    - title: Rollback
      regexp: ^.*?(r|R)evert(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$
      order: 3
    - title: Chore
      regexp: ^.*?(c|C)hore(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$
      order: 4
    - title: Documentation
      regexp: ^.*?(d|D)ocumentation(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$
      order: 5
    - title: CI
      regexp: ^.*?(c|C)(i|I)(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$
      order: 6
    - title: Refactor
      regexp: ^.*?(r|R)efactor(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$
      order: 7
    - title: Internal
      regexp: ^.*?(i|I)nternal(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$
      order: 8
    - title: Others
      order: 999
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go vet
    - go mod tidy
    - go mod vendor
    - go generate ./...
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ .ProjectName }} {{ mdv2escape .Tag }} is out! Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
